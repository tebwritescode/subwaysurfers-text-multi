# NGINX Load Balancer Configuration
# Memory-optimized for Bark TTS deployment

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;  # For audio uploads

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml;

    # Upstream servers
    upstream pytorch_tts {
        # Health check parameters
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;

        # Mock server for development
        server pytorch-tts-mock:8000 weight=1 max_fails=3 fail_timeout=30s;

        # Small model server for production
        server pytorch-tts-small:8000 weight=3 max_fails=3 fail_timeout=30s backup;

        # Full model servers (uncomment as needed)
        # server pytorch-tts-full-gpu:8000 weight=5 max_fails=3 fail_timeout=30s;
        # server pytorch-tts-full-cpu:8000 weight=2 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 80;
        server_name localhost;

        # Health check endpoint
        location /health {
            access_log off;
            proxy_pass http://pytorch_tts;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Quick timeout for health checks
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # TTS synthesis endpoints
        location ~ ^/(synthesize|voices|models|test-voices) {
            proxy_pass http://pytorch_tts;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeout settings for TTS operations
            proxy_connect_timeout 10s;
            proxy_send_timeout 120s;     # Allow time for model loading
            proxy_read_timeout 120s;     # Allow time for synthesis

            # Buffer settings for large audio responses
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 8 128k;
            proxy_busy_buffers_size 256k;
            proxy_temp_file_write_size 256k;

            # Add response headers
            add_header X-Cache-Status $upstream_cache_status always;
            add_header X-Response-Time $request_time always;
        }

        # Voice cloning endpoint (if enabled)
        location /clone {
            proxy_pass http://pytorch_tts;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Extended timeouts for file uploads and processing
            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;

            # Large file upload support
            client_max_body_size 100M;
        }

        # Static content (if any)
        location /static/ {
            alias /var/www/static/;
            expires 1d;
            add_header Cache-Control "public, immutable";
        }

        # Default location
        location / {
            proxy_pass http://pytorch_tts;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Error pages
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # Server for monitoring and management
    server {
        listen 8080;
        server_name monitoring;

        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        location /metrics {
            access_log off;
            return 200 "# NGINX Metrics for Prometheus\n";
            add_header Content-Type text/plain;
        }
    }
}